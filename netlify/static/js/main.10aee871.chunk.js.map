{"version":3,"sources":["img/logo.png","img/spinner 2.gif","components/Navbar.js","components/Search.js","components/Spinner.js","components/MovieItem.js","components/Movies.js","components/Pagination.js","pages/Home.js","pages/About.js","pages/Movie.js","App.js","index.js"],"names":["module","exports","Navbar","className","src","Logo","alt","to","Search","searchMovies","clearSearch","movies","useState","text","setText","onSubmit","e","preventDefault","alert","type","name","placeholder","value","onChange","target","length","onClick","Spinner","spinner","style","width","margin","display","MovieItem","movie","getMovie","posterSrc","poster_path","releaseYear","release_date","split","title","id","Movies","currentMovies","loading","map","key","Pagination","moviesPerPage","totalMovies","paginate","pageNumbers","i","Math","ceil","push","number","Home","About","Movie","movieInfo","getCast","cast","castMembers","slice","useParams","useEffect","original_title","runtime","vote_average","spoken_languages","overview","production_companies","budget","revenue","member","cast_id","profile_path","App","setLoading","setMovies","currentPage","setCurrentPage","setMovieInfo","setCast","apiKey","input","a","axios","get","res","data","results","indexOfLastMovie","indexOfFirstMovie","pageNumber","exact","path","render","props","component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10aee871.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.57dd4de3.png\";","module.exports = __webpack_public_path__ + \"static/media/spinner 2.235b9b3e.gif\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Logo from '../img/logo.png';\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar bg-primary\">\n            <img className=\"navbar-img\" src={Logo} alt=\"logo\"/> \n            <h1 className=\"navbar-title\">\n            Movie Database\n            </h1>\n            <ul>\n                <li>\n                    <Link to='/'>Home</Link>\n                </li>\n                <li>\n                    <Link to='/about'>About</Link>\n                </li>\n            </ul>    \n        </nav>\n    );\n};\n\nexport default Navbar;\n","import React, { useState } from 'react';\n\nconst Search = ({ searchMovies, clearSearch, movies }) => {\n    const [text, setText] = useState('');\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (text === '') {\n          alert('Please enter something');\n        } else {\n          searchMovies(text);\n          setText('');\n        }\n      };\n\n    const onChange = e => setText(e.target.value);\n\n    return (\n        <div>\n            <form onSubmit={onSubmit} className=\"form\">\n                <input  type=\"text\" name=\"text\" placeholder=\"  Search Movies...\" value={text} onChange={onChange}/>\n                <input type=\"submit\" value=\"search\" className=\"btn btn-dark btn-block\"/>\n            </form>\n            {movies.length > 0 && (\n              <button className='btn btn-danger btn-block' onClick={clearSearch}>\n                Clear\n              </button>\n            )}\n        </div>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport spinner from '../img/spinner 2.gif';\n\nconst Spinner = () => {\n    return (\n        <div>\n            <img src={spinner} style={{ width: '100px', margin: '100px auto', display: 'block'}} alt='loading' />\n        </div>\n    );\n};\n\nexport default Spinner;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst MovieItem = ({ movie, getMovie }) => {\n    const moreInfo = () => getMovie(movie.id);\n    const posterSrc = `http://image.tmdb.org/t/p/w342${movie.poster_path}`\n    const releaseYear = movie.release_date.split('-');  \n\n    return (\n        <div className=\"card round-corner-img\">\n            <div className=\"card-inner round-corner-img\">\n                <div className=\"card-front round-corner-img\">\n                    <img className=\"round-corner-img\" src={posterSrc} alt=\"Movie img unavailable\"/>\n                </div>\n                <div className=\"card-back round-corner-img\">\n                    <h1>{movie.title} ({releaseYear[0]})</h1>\n                    <Link to={`/movie/${movie.id}`} className='btn .btn-light btn-sm my-1' onClick={moreInfo} >\n                        More Info\n                    </Link>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport Spinner from './Spinner';\nimport MovieItem from './MovieItem';\n\nconst Movies = ({ currentMovies, loading, getMovie }) => {\n    \n    if (loading) {\n        return <Spinner />;\n      } else {\n        return (\n          <div className=\"grid-3 my-3\">\n            {currentMovies.map(movie => (\n              <MovieItem key={movie.id} movie={movie} getMovie={getMovie}/>\n            ))}\n          </div>\n        );\n      };\n};\n\nexport default Movies;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst Pagination = ({ moviesPerPage, totalMovies, paginate}) => {\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(totalMovies / moviesPerPage); i++) {\n        pageNumbers.push(i);\n    }\n\n    return (\n        <nav>\n          <ul className='pagination'>\n            {pageNumbers.map(number => (\n              <li key={number} className='page-item'>\n                <Link onClick={() => paginate(number)} to='/' className='page-link'>\n                  {number}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n      );\n    };\n\nexport default Pagination\n","import React, { Fragment } from 'react';\nimport Search from '../components/Search';\nimport Movies from '../components/Movies';\nimport Pagination from '../components/Pagination'\n\nconst Home = ({ searchMovies, clearSearch, movies, paginate, moviesPerPage, loading, getMovie, currentMovies }) => (\n    <Fragment>\n      <Search searchMovies={searchMovies} clearSearch={clearSearch} movies={movies}/>\n      <Movies loading={loading} movies={movies} currentMovies={currentMovies}  paginate={paginate} getMovie={getMovie} />\n      <Pagination moviesPerPage={moviesPerPage} totalMovies={movies.length} paginate={paginate}/>\n    </Fragment>\n);\n  \n  export default Home;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"all-center py-3 my-3\">\n      <h1 className=\"my-1 uppercase\">About This App</h1>\n      <p>App to search for movies from 'themoviedb API'</p>\n      <p>Version: 2.0.0</p>\n      <p>Created by Mohamed Mohamud &copy;</p>\n    </div>\n  );\n};\n\nexport default About;","import React, { useEffect } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport Spinner from '../components/Spinner';\n\n\nconst Movie = ({ movieInfo, loading, getCast, cast }) => {\n    const posterSrc = `http://image.tmdb.org/t/p/w342${movieInfo.poster_path}`\n\n    // reduce the amount of cast memebers \n    const castMembers = cast.slice(0,5);\n    \n    let { id } = useParams();\n    useEffect(() => {\n        getCast(id)\n         // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n\n    if (loading) return <Spinner />;\n    return (\n        <div>\n            <Link to='/' className='btn btn-success'>\n                &larr; Search\n            </Link>\n            <h1 className=\"text-center x-large font py-1 bold\">{movieInfo.original_title}</h1>\n            <div className=\"grid-2 bg-container\">\n                <div >\n                    <img src={posterSrc} className=\"all-center mb-1\" alt=\"poster\" style={{ width: '250px' }} />\n                    <div className=\"all-center\">\n                        <p className=\"mb-1 badge badge-primary font\">Released: {movieInfo.release_date}</p>\n                        <p className=\"mb-1 badge badge-primary font\">Runtime: {movieInfo.runtime}m</p>\n                        <p className=\"mb-1 badge badge-primary font\">Rating: {movieInfo.vote_average}/10</p>\n                        <p className=\"mb-1 badge badge-primary font\">Language: {movieInfo.spoken_languages[0].name}</p>\n                    </div>\n                </div>\n                <div className=\"all-center\">\n                    <p className=\"large font \">{movieInfo.overview}</p>\n                    <p className=\"medium mb-1 mt-1 font\"><strong>Produced By:</strong> {movieInfo.production_companies[0].name}</p>\n                    <p className=\"medium mb-1 font\"><strong>Budget:</strong> ${movieInfo.budget}</p>  \n                    <p className=\"medium mb-1 font\"><strong>Revenue:</strong> ${movieInfo.revenue}</p>  \n                </div>\n            </div>\n            <div className=\"bg-container\">           \n                {castMembers.map(member =>(\n                    <img key={member.cast_id} className=\"round-corner-img cast-img\" src={`http://image.tmdb.org/t/p/w185${member.profile_path}`} alt=\"cast-member\"  />   \n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Movie;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport About from './pages/About';\nimport Movie from './pages/Movie';\nimport axios from 'axios';\nimport './App.css';\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviesPerPage] = useState(6);\n  const [movieInfo, setMovieInfo] = useState({});\n  const [cast, setCast] = useState([]);\n\n  const apiKey = '0e00fa005cf175e7c9a779ef26eb58b2';\n\n  // search Movies \n  const searchMovies = async (input) => {\n    try {\n      setLoading(true)\n      const res = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&language=en-US&query=${input}&page=1&include_adult=false`)\n      //console.log(res.data.results);\n      setMovies(res.data.results);\n      setLoading(false);\n    } catch (err) {\n      alert('Movie is unavailable');\n    } \n  }\n\n  // CLear Search\n  const clearSearch = () => {\n    setMovies([]);\n    setLoading(false);\n  };\n\n  // Get current Movie\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie)\n\n  // Change page\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  \n  // Get single movie info\n  const getMovie = async (id) => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`);\n      //console.log(res.data);\n      setMovieInfo(res.data);\n      setLoading(false);\n    } catch (err) {\n      alert('No information available');\n    }\n  };\n\n  // Get movie cast\n  const getCast = async (id) => {\n    try {\n      setLoading(true);\n      const res = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`);\n      //console.log(res.data.crew);\n      setCast(res.data.cast)\n    } catch (err) {\n      alert('No cast information available')\n    }\n  }\n  \n  return (\n    <Router>\n      <div>\n        <Navbar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path='/' render={(props) => <Home searchMovies={searchMovies} movies={movies} currentMovies={currentMovies} loading={loading} paginate={paginate} moviesPerPage={moviesPerPage} clearSearch={clearSearch} getMovie={getMovie} />} />\n            <Route exact path='/about' component={About} />\n            <Route exact path='/movie/:id' render={(props) => <Movie  movieInfo={movieInfo} loading={loading} cast={cast} getCast={getCast} />} />\n          </Switch>       \n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}